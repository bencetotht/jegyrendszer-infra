---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: erettsegi-backend
  namespace: {{.Values.namespace}}
  labels:
    # app: erettsegi-backend
    app.kubernetes.io/instance: erettsegib-release
    app.kubernetes.io/name: erettsegib
    pod-security.kubernetes.io/audit: baseline
spec:
  replicas: {{.Values.backend.replicas}}
  selector:
    matchLabels:
      # app: erettsegi-backend
      app.kubernetes.io/instance: erettsegib-release
      app.kubernetes.io/name: erettsegib
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        # app: erettsegi-backend
        app.kubernetes.io/instance: erettsegib-release
        app.kubernetes.io/name: erettsegib
    spec:
      serviceAccountName: erettsegi-backend-svc-a
      imagePullSecrets:
      - name: regcred-bnb
      containers:
      - name: erettsegi-backend
        image: "europe-west3-docker.pkg.dev/agora-jegyrendszer/jegyrendszer/erettsegi-backend:{{.Values.backend.tag}}" 
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        ports:
        - containerPort: 3000
          name: backend-open
        envFrom:
        - secretRef:
            name: erettsegi-site-sm
        env:
        - name: REDIS
          value: {{ .Values.uri.redis }}
        - name: MONGO
          value: {{ .Values.uri.mongo }}
{{ if .Values.development }}
        - name: NODE_ENV
          value: "development"
{{ else }}
        - name: NODE_ENV
          value: "production"
{{ end }}
        securityContext:
          allowPrivilegeEscalation: false
{{ if .Values.backend.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 2
{{ end }}
{{ if .Values.backend.startupProbe }}
        startupProbe:
          httpGet:
            path: /api/v1/health
            port: 3000
          failureThreshold: 3
          periodSeconds: 10
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: erettsegi-backend
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/instance: erettsegib-release
    app.kubernetes.io/name: erettsegib
spec:
  selector:
    app.kubernetes.io/instance: erettsegib-release
    app.kubernetes.io/name: erettsegib
  ports:
  - name: backend-open
    port: 3000
    protocol: TCP
    targetPort: backend-open
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: erettsegi-backend-svc-a
  namespace: {{ .Values.namespace }}